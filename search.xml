<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo | 試裝 utterances 留言板</title>
    <url>/2023/03/15/Hexo_%E5%B0%B1%E7%AE%97%E6%B2%92%E4%BA%BA%E7%95%99%E8%A8%80%E4%B9%9F%E8%A6%81%E8%A3%9D%E4%B8%80%E5%80%8B%20utterances%20%E7%95%99%E8%A8%80%E6%9D%BF%E5%90%A7/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前跟著 Ray 的 <a href="https://israynotarray.com/">試著學 Hexo</a> 系列架好了這個 Hexo 部落格</p>
<p>原本是使用 NexT 內建就有支援的 <a href="https://blog.disqus.com/">DISQUS</a> 這個留言板來使用，但它的版面有不實用又佔空間的奇怪互動表情符號 …</p>
<p>剛好看到使用 Hexo 架站的大大們部落格中，那乾淨的 utterances ，就被被燒得不要不要的了，雖然<a href="https://utteranc.es/">官方的網址</a>已經把流程寫得很清楚了，但相信金魚腦的我可能過一陣子就忘光光，寫成文章記錄過程。</p>
<span id="more"></span>

<h2 id="utterances-有什麼優點"><a href="#utterances-有什麼優點" class="headerlink" title="utterances 有什麼優點 ?"></a>utterances 有什麼優點 ?</h2><p>在 Hexo 用 utterances 有以下官網介紹比較吸引我的優點</p>
<ul>
<li>No tracking, no ads, always free. </li>
<li>Dark theme. </li>
<li>Lightweight. Vanilla TypeScript.</li>
</ul>
<blockquote>
<p>菜雞註記 Vanilla TypeScript 是指在不使用任何框架或第三方庫的情況下，直接使用 TypeScript 編寫原生 JavaScript 代碼</p>
</blockquote>
<h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><ol>
<li><p>在 Github 上檢查你要存放留言 issue 的 repository 是不是 public ，這樣 utterances 才可以放issues</p>
</li>
<li><p>同意在你的 Github 上安裝 <a href="https://github.com/apps/utterances">utterances app</a></p>
<p><img src="https://i.imgur.com/4uwcueA.png" alt="utterances app Repository assess"></p>
<p>Repository access 的 radio option 選擇 Only select repositories，下拉選單 dropdown menu 選擇你要放 issues 的資料庫 repository，有看到別人的部落格是新建一個專門放置 issues 的 repository。</p>
</li>
<li><p><a href="https://utteranc.es/">utteranc</a> 的官網填上 repo <code>owner/repo</code> <del>不是跟我一開始一樣，無腦複製 https 那一串</del></p>
</li>
<li><p>Blog Post ↔️ Issue Mapping 這裡會決定在 issues 中的標題，我是選 Issue title contains page title 他會顯示文章標題，選擇pathname會如圖最下面 Issue 一樣醜醜的。<br><img src="https://i.imgur.com/BiFpHda.png" alt="Issue title contains page title(上) &amp; pathname(下)"></p>
</li>
<li><p>Theme 就是留言板的樣式</p>
</li>
<li><p>Enable Utterances 這一串產生script tag，需要把他貼在下面路徑找到的 comments.swig 檔案裡面</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">themes\next\layout\_partials\comments.<span class="property">swig</span></span><br><span class="line"><span class="comment">//路徑中的 next 替換成你目前使用的樣式</span></span><br></pre></td></tr></table></figure>
<p>在 comments.swig 找到下面這句的下方貼上 我們得到的那一串 script tag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if page.comments %&#125;</span><br></pre></td></tr></table></figure>
<p>以下是我<del>到處拼湊</del>的 script tag </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;comments&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.utterances</span>&#123;<span class="attribute">max-width</span>: <span class="number">100%</span>;&#125;</span></span><br><span class="line"><span class="language-css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://utteranc.es/client.js&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">repo</span>=<span class="string">&quot;owner/repo&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">issue-term</span>=<span class="string">&quot;title&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">label</span>=<span class="string">&quot;💬&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">theme</span>=<span class="string">&quot;github-dark&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">async</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>之後在主題路徑下找到 _config.yml 檔案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">themes\next\_config.yml</span><br></pre></td></tr></table></figure>
<p>開啟後在最下面加入以下程式碼</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">utterances:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure></li>
<li><p>恭喜你 ! 最後執行 <code>hexo clean</code> 、 <code>hexo g</code> 、<code>hexo d</code> 部屬完成，沒意外部落格就會有香香乾淨的留言板囉 !</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo 系列</category>
      </categories>
      <tags>
        <tag>Hexo Next</tag>
      </tags>
  </entry>
  <entry>
    <title>(1)MySQL 菜雞學習筆記 | 什麼是資料庫 ? 各種不知道要怎麼分類的前情提要</title>
    <url>/2023/03/20/(1)MySQL%20%E8%8F%9C%E9%9B%9E%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98%20_%E4%BB%80%E9%BA%BC%E6%98%AF%E8%B3%87%E6%96%99%E5%BA%AB/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在資策會上 SQL 一周，大概 16 小時，對資料庫有初步的認識，希望能透過筆記整理所學，並把懂弄到能打出 code 解問題 ! 溫馨提醒 : 本系列為菜雞學習筆記，若有錯誤歡迎指正 ! </p>
<h2 id="什麼是資料庫系統"><a href="#什麼是資料庫系統" class="headerlink" title="什麼是資料庫系統 ?"></a>什麼是資料庫系統 ?</h2><p>資料庫系統可以說是，<code>資料庫 Database</code>存放資料的地方，和 <code>資料庫系統 Database Management System</code> 控制資料存取和權限組成。</p>
<span id="more"></span>

<h3 id="資料庫-Database-amp-資料庫系統"><a href="#資料庫-Database-amp-資料庫系統" class="headerlink" title="資料庫 Database &amp; 資料庫系統"></a>資料庫 Database &amp; 資料庫系統</h3><p>資料存在你我的生活之中，只是把資訊給表格化像 excel 的表格，但根據資料庫的設計，邏輯會更加複雜</p>
<table>
<thead>
<tr>
<th>使用者名字</th>
<th>帳號</th>
</tr>
</thead>
<tbody><tr>
<td>莨</td>
<td>22zl</td>
</tr>
</tbody></table>
<p>管理資料庫的應用程式就叫資料庫系統</p>
<p>其中又分成<code>關聯式資料庫 Relational Database 又稱 RDBMS</code> 像是MySQL、Miceosoft SQL Sever、和<code>非關聯式資料庫 Non-SQL</code> 像是 mongodb ，有這兩種資料庫系統。</p>
<h2 id="非關聯式資料庫-NoSQL"><a href="#非關聯式資料庫-NoSQL" class="headerlink" title="非關聯式資料庫 NoSQL"></a>非關聯式資料庫 NoSQL</h2><p>跟RDBMS相比，彈性高、速度快，資料通常儲存在 JSON 或類似的資料結構裡，最大特色是 :<br><code>不要求資料同步，只要求最後結果一致。</code><br>不需要定義 schema，資料之間沒有關聯關係，常見的 NoSQL 有MongoDB、Redis等，且NoSQL為水平擴展(增加另一台雲端設備)，擴展成本較低。</p>
<p>適用情況 : NoSQL大多為開源軟體，所以適用沒什麼經費的小型專案，及開發初期需要頻繁變動資料庫時、或儲存大量資料時。</p>
<h2 id="關聯式資料庫-RDBMS"><a href="#關聯式資料庫-RDBMS" class="headerlink" title="關聯式資料庫 RDBMS"></a>關聯式資料庫 RDBMS</h2><p>特色如其名，常見的關聯式資料庫有:MySQL、MMSQL等…<br>在關聯式資料庫中資料與資料之間可以用 FK 做一對一 ( 1 :1 ) 、一對多 ( 1 : N )、多對多( M : N )的關聯，且好的資料庫會有 ACID 來確保完整性。</p>
<ul>
<li><code>原子性 Atomicity</code> 一次的交易 transaction 只能有兩種結果，全部完成 commit、全部不完成 rollback，不會卡一半。</li>
<li><code>一致性 Consistency</code> transaction 中會驗證是否符合 schema 規範，不會讓不一樣的格式進入資料庫中。</li>
<li><code>隔離性 Isolation</code> 多筆交易 transaction 可以同時進行，但不會在交易完成前互相干擾。</li>
<li><code>耐久性 Durability</code> transaction 完成後對資料的修改，不會因為重新啟動或錯誤而改變。</li>
</ul>
<p>適用情況 : 在系統資料龐大、商業邏輯複雜、存取嚴謹度要求高的需求下，使用關聯式資料庫應該是比較好的選擇。</p>
<p>關聯式資料庫也有以下幾個缺點 : </p>
<ul>
<li>費用較高</li>
<li>邏輯複雜、維護成本比較高、弄不好會有死鎖 Deadlock 的問題。</li>
<li>資料庫通常是產品運作的命脈，所以通常都會選效能最強的設備來當資料庫的伺服器，但後續擴展困難，通常式垂直擴展 (電腦硬體設備)</li>
</ul>
<h3 id="資料庫管理模組"><a href="#資料庫管理模組" class="headerlink" title="資料庫管理模組"></a>資料庫管理模組</h3><p>一個關聯式資料庫通常包括以下四個模組</p>
<ul>
<li><code>儲存管理 Storage Manager</code>資料寫入磁碟、讀取等 … 通常由檔案系統和磁碟管理器組成。</li>
<li><code>查詢處理模組 Query Processor</code>接收資料庫查詢，編譯誠適當的指令，這模組包括分析器（Parser）、 查詢優化器（Query Optimizer）、執行引擎（Execution Engine）等..</li>
<li><code>交易管理 Transaction Manger</code>負責管理資料庫的交易</li>
<li><code>回復管理 Recovery Manger</code>在系統崩潰時，可以快速的恢復資料庫並正常運作</li>
</ul>
<h3 id="資料庫的結構"><a href="#資料庫的結構" class="headerlink" title="資料庫的結構"></a>資料庫的結構</h3><ul>
<li>表格 table</li>
<li>資料表及欄位的規範(綱要) schema </li>
<li>欄位 column</li>
<li>表格的限制 constraints</li>
</ul>
<p>在這裡我一直搞不懂 schema 跟 constraints 的差別，整理一下跟 Chat GPT 詢問過後以下理解 : </p>
<ul>
<li><p><code>schema</code> 算是比較大範圍，他就是一個結構，在 MySQL 中使用下面語法查詢會得到關於資料庫詳細架構(下面資料庫為舉例用)，他會描述在這個資料庫中，表格有甚麼樣的限制 constraints</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="comment">--假設你要先從最外層查起</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database1          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Database2　　　　　 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line">use database_name;</span><br><span class="line"><span class="comment">--查詢你要查看的資料表名稱</span></span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_DatabaseName    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> table1                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> table2                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> table3                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="comment">--查看資料表的綱要 (以下有兩種寫法)</span></span><br><span class="line"><span class="comment">--第一種 : 會列出大致的架構</span></span><br><span class="line"><span class="keyword">desc</span> table_neme; <span class="comment">--desc 是 describe 的縮寫</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field          <span class="operator">|</span> Type          <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> OrderID        <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)       <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CustomerID     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">5</span>)    <span class="operator">|</span> YES  <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> EmployeeID     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)       <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> OrderDate      <span class="operator">|</span> datetime      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RequiredDate   <span class="operator">|</span> datetime      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShippedDate    <span class="operator">|</span> datetime      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipVia        <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)       <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Freight        <span class="operator">|</span> <span class="type">decimal</span>(<span class="number">19</span>,<span class="number">4</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipName       <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">40</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipAddress    <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">60</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipCity       <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">15</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipRegion     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">15</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipPostalCode <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ShipCountry    <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">15</span>)   <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--第二種 : 更詳細的 constraints 資訊</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> table_name;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">     <span class="keyword">Table</span>: labO</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `labo` (</span><br><span class="line">`OrderID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">`CustomerID` <span class="type">varchar</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`EmployeeID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`OrderDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`RequiredDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShippedDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipVia` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`Freight` <span class="type">decimal</span>(<span class="number">19</span>,<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipName` <span class="type">varchar</span>(<span class="number">40</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipAddress` <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipCity` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipRegion` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipPostalCode` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`ShipCountry` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`OrderID`), <span class="comment">--會很清楚地跟你說 PK、FK 在哪裡，有什麼限制</span></span><br><span class="line">KEY `FK_LabO_LabC` (`CustomerID`),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> `FK_LabO_LabC` <span class="keyword">FOREIGN</span> KEY (`CustomerID`) </span><br><span class="line"><span class="keyword">REFERENCES</span> `labc` (`CustomerID`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB </span><br><span class="line"><span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 </span><br><span class="line"><span class="keyword">COLLATE</span><span class="operator">=</span>utf8_general_ci</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>constraints</code>則是比較小的單位，他是為了完整性、一致性，在表格裡面做的規範，可以有多個 constraints 例如: 主鍵 PK、外鍵 FK、唯一 UNIQUE 等…</p>
</li>
</ul>
<p>在創建表格時，欄位通常就會寫入限制 constraints</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> categories </span><br><span class="line">(</span><br><span class="line">  <span class="comment">--限制欄位中的資料預設為0，datatype為整數INT，長度限制11</span></span><br><span class="line">	CategoryID  <span class="type">int</span>(<span class="number">11</span>) defaule <span class="number">0</span>, </span><br><span class="line">  <span class="comment">--限制欄位中的資料datatype為字串，長度限制15</span></span><br><span class="line">	CategoryName  <span class="type">varchar</span>(<span class="number">15</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> table_name; <span class="comment">--確認一下有沒有新增成功</span></span><br></pre></td></tr></table></figure>
<p>如果之後想要增加限制 constraints，則可以使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ADD</span> column_name datatype;</span><br></pre></td></tr></table></figure>
<p>要注意的是 ADD 欄位的 datatype 時，要把原本的 datatype 也一起寫上，不要只寫上新增的 ! 這樣 datatype 就會只剩下你最後寫的喔 ! </p>
<h2 id="SQL-Data-Types-資料類型"><a href="#SQL-Data-Types-資料類型" class="headerlink" title="SQL Data Types 資料類型"></a>SQL Data Types 資料類型</h2><table>
<thead>
<tr>
<th>Data Types</th>
<th>Bytes</th>
</tr>
</thead>
<tbody><tr>
<td>INT 整數</td>
<td>4 Bytes</td>
</tr>
<tr>
<td>DECIMAL 帶有小數點的數</td>
<td>視精確度而定</td>
</tr>
<tr>
<td>VARCHAR 變動長度</td>
<td>max &#x3D; 2GB</td>
</tr>
<tr>
<td>DATATIME 時間</td>
<td>8 Bytes</td>
</tr>
</tbody></table>
<p>顯示雖然為數字，但不用加減乘除的都應該用字串類型，像 : 郵遞區號<br>需要加減乘除的就應該用 INT、DECIMAL，像 : 薪水</p>
<h3 id="常見的4種字串型別"><a href="#常見的4種字串型別" class="headerlink" title="常見的4種字串型別"></a>常見的4種字串型別</h3><p>字串要注意的是，超過限制長度的資料會直接被裁掉喔</p>
<table>
<thead>
<tr>
<th>Data Types</th>
<th>CHAR_LENGTH</th>
<th>Bytes</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>CHAR</td>
<td>定長</td>
<td>英文 1 Byte，非英文2 Byte</td>
<td>適用身分證字號、電話號碼等</td>
</tr>
<tr>
<td>VARCHAR</td>
<td>變長</td>
<td>英文 1 Byte，非英文2 Byte</td>
<td>適用地址、備註等</td>
</tr>
<tr>
<td>NCHAR</td>
<td>定長</td>
<td>無論中英文都是2 Byte</td>
<td>適用身分證字號、電話號碼等</td>
</tr>
<tr>
<td>NVARCHAR</td>
<td>變長</td>
<td>無論中英文都是2 Byte</td>
<td>適用地址、備註等</td>
</tr>
<tr>
<td>TEXT</td>
<td>變長</td>
<td>無論中英文都是2 Byte</td>
<td>適用文章內容、文件說明等</td>
</tr>
</tbody></table>
<h3 id="NULL-是尚未有值"><a href="#NULL-是尚未有值" class="headerlink" title="NULL 是尚未有值"></a>NULL 是尚未有值</h3><p>NULL是預設之後會填值，而沒有設定的替代詞，若設定是空值，則寫” , 是欄位裡面裝空白，麥亂用。</p>
<p>p.s 還有時間也是一塊需要注意的部分，內容待補。</p>
<h3 id="Keys-關係鍵"><a href="#Keys-關係鍵" class="headerlink" title="Keys 關係鍵"></a>Keys 關係鍵</h3><p>關聯式資料庫重要的組成部分，在 DBMS 中，主要的 Keys 有 :</p>
<ol>
<li><code>主鍵 primaty key</code> ( 簡稱PK )<br> 有UNIQUE 唯一 跟NOT NULL 不能是空值的兩個特性 ，它也可以是連接到其他表格的PK。</li>
<li><code>外鍵 Foreign Key</code> ( 簡稱FK )<br> 指向其他表格PK欄位，確保兩張表格的關聯性，只能對應到 PK ( 避免有其他數值導致錯誤 )</li>
<li><code>自然鍵 Natural key</code><br> 真實生活中唯一確定一個事物的標誌，來當作主鍵 primary key 可被稱為 natural key ， ex : 身分證字號</li>
<li><code>代理鍵 Sirrogate key</code><br> 資料表格中，所有欄位都不適合當主鍵時，就會製作一個無意義的欄位來當作主鍵</li>
<li><code>複合主鍵 comopsite key</code><br> 一筆資料只能有一個主鍵，( 但可以由兩個以上的行組成PK )</li>
</ol>
<p>在 key 欄位可以增加 AUTO INCREMENT 欄位會自動遞增資料行的值，且不能重複，預設從1開始，也可以自訂從其他號碼開始。</p>
<p>情境題(一)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t2 (</span><br><span class="line">  id <span class="type">int</span> <span class="keyword">primary</span> key, <span class="comment">--PK 有UNIQUE跟NOT NULL的特性</span></span><br><span class="line">  data <span class="type">varchar</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 (id, data) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 (id, data) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">&#x27;200&#x27;</span>);</span><br><span class="line"><span class="comment">--新增下面這筆資料，就會因為PK重複而跳error</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t2 (id, data) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;100&#x27;</span>); </span><br></pre></td></tr></table></figure>
<p>情境題(二)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t3 (</span><br><span class="line">  id <span class="type">int</span> auto_increment <span class="keyword">primary</span> key,<span class="comment">--PK 有UNIQUE跟NOT NULL的特性</span></span><br><span class="line">  data <span class="type">varchar</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">--因為有 auto_increment 屬性，所以就算 values 沒有值，他也會自動幫你填值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t3 (data) <span class="keyword">values</span> (<span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t3 (data) <span class="keyword">values</span> (<span class="string">&#x27;200&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t3 (data) <span class="keyword">values</span> (<span class="string">&#x27;100&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t3;</span><br><span class="line"></span><br><span class="line"><span class="comment">--id 可以斷開前面的順序，跳號後自己填入從幾號開始</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t3 (id, data) <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;104&#x27;</span>);</span><br><span class="line"><span class="comment">--以下在新增的欄位 id 就會從 6 開始</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t3 (data) <span class="keyword">values</span> (<span class="string">&#x27;200&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>待補內容</p>
<h3 id="理解-PK-和-FK-的關係"><a href="#理解-PK-和-FK-的關係" class="headerlink" title="理解 PK 和 FK 的關係"></a>理解 PK 和 FK 的關係</h3><h2 id="資料庫設計-ER-MODEL"><a href="#資料庫設計-ER-MODEL" class="headerlink" title="資料庫設計 ER MODEL"></a>資料庫設計 ER MODEL</h2><h2 id="資料庫正規化"><a href="#資料庫正規化" class="headerlink" title="資料庫正規化"></a>資料庫正規化</h2><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><p><a href="https://tw.alphacamp.co/blog/mysql-and-mongodb-comparison">alphacamp|是否該用 MongoDB？選擇資料庫前你該了解的事</a></p>
<p><a href="https://medium.com/@eric248655665/rdbms-vs-nosql-%E9%97%9C%E8%81%AF%E5%BC%8F%E8%B3%87%E6%96%99%E5%BA%AB-vs-%E9%9D%9E%E9%97%9C%E8%81%AF%E5%BC%8F%E8%B3%87%E6%96%99%E5%BA%AB-1423c9fbb91a">HS | RDBMS vs. NOSQL | 關聯式資料庫 vs. 非關聯式資料庫</a></p>
<p><a href="https://chat.openai.com/chat">Caht GPT 助教</a></p>
]]></content>
      <tags>
        <tag>MySQL Note</tag>
      </tags>
  </entry>
  <entry>
    <title>Note | Web 網頁入門初心者進大觀園</title>
    <url>/2023/03/13/Note_Web%20%E7%B6%B2%E9%A0%81%E5%85%A5%E9%96%80%E5%88%9D%E5%BF%83%E8%80%85%E9%80%B2%E5%A4%A7%E8%A7%80%E5%9C%92/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  文章系列標題是借用「劉姥姥進大觀園」這句比喻人初次到某場所，對事事皆感到新奇，<del>或用來取笑別人沒見過世面</del> 的俗諺來作自嘲。</p>
<p>  順便背景介紹一下，我是設計科的非本科的轉職仔，自認資質愚鈍，很多東西除了看文件，還需要輔助很多額外的文章、實作踩雷才會有種比較理解的感覺。</p>
<p>  因此想透過用自己的文字撰寫來統整目前的知識，再用比較熟悉的圖像記憶整理一下，日後回憶也方便，這文章應該會一直編輯更新，直到有新的主題寫下去。</p>
<p>  若文章中有錯誤也歡迎糾正，感謝大家！</p>
  <span id="more"></span>

<h2 id="Web-是怎麼運作的呢"><a href="#Web-是怎麼運作的呢" class="headerlink" title="Web 是怎麼運作的呢 ?"></a>Web 是怎麼運作的呢 ?</h2><p>  <img src="https://i.imgur.com/eavypn1.jpg" alt="Server-side website programming"></p>
<ul>
<li>網頁瀏覽器 → 使用超文本傳輸協定（HyperText Transfer Protocol, HTTP）網頁伺服器（web servers）→ 發送HTTP 請求（request）→ 網頁伺服器→ HTTP 回應（response）</li>
</ul>
<h3 id="靜態網頁-Static-sites"><a href="#靜態網頁-Static-sites" class="headerlink" title="靜態網頁 Static sites"></a>靜態網頁 Static sites</h3><p>  <img src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/basic_static_app_server.png" alt="Static sites | 圖源1"></p>
<h3 id="動態網頁-Dynamic-sites"><a href="#動態網頁-Dynamic-sites" class="headerlink" title="動態網頁 Dynamic sites"></a>動態網頁 Dynamic sites</h3><p>  <img src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/web_application_with_html_and_steps.png" alt="Dynamic sites | 圖源1 "></p>
<h3 id="用戶端-Client-side"><a href="#用戶端-Client-side" class="headerlink" title="用戶端 Client side"></a>用戶端 Client side</h3><ul>
<li>程式語言由HTML、CSS、JaveScript撰寫。</li>
<li>我們看到的網頁長怎樣</li>
</ul>
<h3 id="伺服器端-Sever-side"><a href="#伺服器端-Sever-side" class="headerlink" title="伺服器端 Sever-side"></a>伺服器端 Sever-side</h3><ul>
<li>常見程式語言PHP、Python、JAVA、C# 與 NodeJS(JavaScript)等…</li>
<li>遞送資訊，優化使用者體驗</li>
<li>購物車庫存管理、歷史紀錄、演算法、會員登入、手遊資料儲存碼、使用者資料分析…</li>
</ul>
<h2 id="什麼是HTTP"><a href="#什麼是HTTP" class="headerlink" title="什麼是HTTP ?"></a>什麼是HTTP ?</h2><ul>
<li>HTTPS( HyperText Transfer Protocol Secure超文本傳輸安全協定 )</li>
<li>利用SSL&#x2F;TLS來加密封包傳輸</li>
<li>預設port為443</li>
</ul>
<blockquote>
<p>推薦服用Will <a href="https://www.youtube.com/watch?v=Taq5TV1K4XU">保哥｜初學者都該學會的 HTTP 通訊協定基礎</a></p>
</blockquote>
<h3 id="HTTP請求方式-Http-Request-Method"><a href="#HTTP請求方式-Http-Request-Method" class="headerlink" title="HTTP請求方式 Http Request Method"></a>HTTP請求方式 Http Request Method</h3><ul>
<li><p>當你在網路點擊一個連結、提交一個表單、進行一次搜索等…瀏覽器都會發送一個HTTP給伺服器。</p>
</li>
<li><p><code>GET</code> 拿取資料 (應只用在顯示、讀取用途)</p>
</li>
<li><p><code>POST</code> 上傳資料，請求伺服器處理 ( 如提交表單、上傳檔案，可能建立、修改現有資源)</p>
</li>
<li><p><code>PUT</code> 覆蓋資料(全部)</p>
</li>
<li><p><code>PATCH</code> 更新資料(可部分更新)</p>
</li>
<li><p><code>DELETE</code> 刪除資料</p>
</li>
<li><p><code>OPTIONS</code> 使伺服器回傳該資源支援的所有HTTP請求方法</p>
</li>
</ul>
<h3 id="HTTP回應-HTTP-Response"><a href="#HTTP回應-HTTP-Response" class="headerlink" title="HTTP回應 HTTP Response"></a>HTTP回應 HTTP Response</h3><ul>
<li><code>1xx</code> ：信息 Informational 接收到request了 需要繼續處理100 Continue：Server 成功接收、但 Client 還要進行一些處理。</li>
<li><code>2xx</code>：成功 Successful : 200 0K：請求成功 、201 Created：資源已經被創建，POST、PUT 後可能會收到這樣的回應、204 No Content：成功但沒有回傳的內容（當你發出 Delete 的 request）</li>
<li><code>3xx</code>：重定向、轉址 (Redirects)301 Moved Permanently : 請求的網址已經搬家囉</li>
<li><code>4xx</code>：用戶端的錯誤 (Client Errors) 可能格式寫錯或漏寫400 Bad Request：請求格式寫錯、資源太大401 Unauthorized：未取得授權、檢視 API 的授權方式、登入等…、403 Forbidden：使用錯誤的驗證404：找不到資源，通常是路徑錯誤，大多是前端的路徑輸入錯誤、422：請求是正確的，可能不符合操作流程（大多可從後端的回應中找到問題）、429：請求次數過多，後端封鎖。</li>
<li><code>5xx</code>：伺服器端錯誤 (Server Errors) 伺服器當機、機台燒掉、500 Internal Server Error：伺服器出錯，搶票之類的</li>
</ul>
<p><img src="https://i.imgur.com/kZpUL4S.png" alt="chrome devtools"><br>使用google瀏覽器按F12，開啟開發者工具，可在Network中瀏覽，這個網頁下了什麼樣的Request，status欄為Response的狀態，可藉此找出優化網頁速度該從哪裡下手。</p>
<h2 id="Program-Process-Thread-三者關係"><a href="#Program-Process-Thread-三者關係" class="headerlink" title="Program, Process, Thread 三者關係"></a>Program, Process, Thread 三者關係</h2><p><img src="https://i.imgur.com/7tce7Bd.jpg" alt="Program, Process, Thread"></p>
<p>為加深理解，在圖片中加了劇本去理解這之間的關係</p>
<p><img src="https://i.imgur.com/fLJuBDZ.jpg" alt="Program, Process, Thread"></p>
<p>也可以打開工作管理員，不同頁籤中相互對照，幫助了解邏輯。</p>
<p><img src="https://i.imgur.com/WEr6feK.png" alt="工作管理員"></p>
<h2 id="參考-Reference"><a href="#參考-Reference" class="headerlink" title="參考 Reference"></a>參考 Reference</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Server-side/First_steps/Introduction">MDN</a><br>圖源 1 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview">MDN | Client-Server Overview</a></p>
<h2 id="學習資料"><a href="#學習資料" class="headerlink" title="學習資料"></a>學習資料</h2><p><a href="https://www.youtube.com/watch?v=QuCu4iDpPTU&t=1871s">六角學院｜前後端都該理解的計算機概論</a><br><a href="https://www.youtube.com/watch?v=7_LPdttKXPc">Aaron｜How the Internet Works in 5 Minutes</a><br><a href="https://hulitw.medium.com/learning-tcp-ip-http-via-sending-letter-5d3299203660">Huli｜從傳紙條輕鬆學習基本網路概念</a></p>
<h2 id="讀書清單"><a href="#讀書清單" class="headerlink" title="讀書清單"></a>讀書清單</h2><p>恐龍書 Operation System Concepts<br><a href="https://www.rfc-editor.org/rfc/rfc2616">RFC 2616</a></p>
]]></content>
      <categories>
        <category>初心者筆記系列</category>
      </categories>
      <tags>
        <tag>HTTP Note</tag>
      </tags>
  </entry>
</search>
