<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>艸良 等於 莨</title>
  
  <subtitle>網頁技術筆記部落格</subtitle>
  <link href="https://22aliang.github.io/atom.xml" rel="self"/>
  
  <link href="https://22aliang.github.io/"/>
  <updated>2023-03-17T20:13:12.964Z</updated>
  <id>https://22aliang.github.io/</id>
  
  <author>
    <name>22zl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo | 就算沒人留言也要裝一個 utterances 留言板吧</title>
    <link href="https://22aliang.github.io/2023/03/15/Hexo_%E5%B0%B1%E7%AE%97%E6%B2%92%E4%BA%BA%E7%95%99%E8%A8%80%E4%B9%9F%E8%A6%81%E8%A3%9D%E4%B8%80%E5%80%8B%20utterances%20%E7%95%99%E8%A8%80%E6%9D%BF%E5%90%A7/"/>
    <id>https://22aliang.github.io/2023/03/15/Hexo_%E5%B0%B1%E7%AE%97%E6%B2%92%E4%BA%BA%E7%95%99%E8%A8%80%E4%B9%9F%E8%A6%81%E8%A3%9D%E4%B8%80%E5%80%8B%20utterances%20%E7%95%99%E8%A8%80%E6%9D%BF%E5%90%A7/</id>
    <published>2023-03-14T16:47:28.304Z</published>
    <updated>2023-03-17T20:13:12.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前跟著 Ray 的 <a href="https://israynotarray.com/">試著學 Hexo</a> 系列架好了這個 Hexo 部落格</p><p>原本是使用 NexT 內建就有支援的 <a href="https://blog.disqus.com/">DISQUS</a> 這個留言板來使用，但它的版面有不實用又佔空間的奇怪互動表情符號 …</p><p>剛好看到使用 Hexo 架站的大大們部落格中，那乾淨的 utterances ，就被被燒得不要不要的了，雖然<a href="https://utteranc.es/">官方的網址</a>已經把流程寫得很清楚了，但相信金魚腦的我可能過一陣子就忘光光，寫成文章記錄過程。</p><span id="more"></span><h2 id="utterances-有什麼優點"><a href="#utterances-有什麼優點" class="headerlink" title="utterances 有什麼優點 ?"></a>utterances 有什麼優點 ?</h2><p>在 Hexo 用 utterances 有以下官網介紹比較吸引我的優點</p><ul><li>No tracking, no ads, always free. </li><li>Dark theme. </li><li>Lightweight. Vanilla TypeScript.</li></ul><blockquote><p>菜雞註記 Vanilla TypeScript 是指在不使用任何框架或第三方庫的情況下，直接使用 TypeScript 編寫原生 JavaScript 代碼</p></blockquote><h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><ol><li><p>在 Github 上檢查你要存放留言 issue 的 repository 是不是 public ，這樣 utterances 才可以放issues</p></li><li><p>同意在你的 Github 上安裝 <a href="https://github.com/apps/utterances">utterances app</a></p><p><img src="https://i.imgur.com/4uwcueA.png" alt="utterances app Repository assess"></p><p>Repository access 的 radio option 選擇 Only select repositories，下拉選單 dropdown menu 選擇你要放 issues 的資料庫 repository，有看到別人的部落格是新建一個專門放置 issues 的 repository。</p></li><li><p><a href="https://utteranc.es/">utteranc</a> 的官網填上 repo <code>owner/repo</code> <del>不是跟我一開始一樣，無腦複製 https 那一串</del></p></li><li><p>Blog Post ↔️ Issue Mapping 這裡會決定在 issues 中的標題，我是選 Issue title contains page title 他會顯示文章標題，選擇pathname會如圖最下面 Issue 一樣醜醜的。<br><img src="https://i.imgur.com/BiFpHda.png" alt="Issue title contains page title(上) &amp; pathname(下)"></p></li><li><p>Theme 就是留言板的樣式</p></li><li><p>Enable Utterances 這一串產生script tag，需要把他貼在下面路徑找到的 comments.swig 檔案裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">themes\next\layout\_partials\comments.<span class="property">swig</span></span><br><span class="line"><span class="comment">//路徑中的 next 替換成你目前使用的樣式</span></span><br></pre></td></tr></table></figure><p>在 comments.swig 找到下面這句的下方貼上 我們得到的那一串 script tag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if page.comments %&#125;</span><br></pre></td></tr></table></figure><p>以下是我<del>到處拼湊</del>的 script tag </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;comments&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.utterances</span>&#123;<span class="attribute">max-width</span>: <span class="number">100%</span>;&#125;</span></span><br><span class="line"><span class="language-css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://utteranc.es/client.js&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">repo</span>=<span class="string">&quot;owner/repo&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">issue-term</span>=<span class="string">&quot;title&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">label</span>=<span class="string">&quot;💬&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">theme</span>=<span class="string">&quot;github-dark&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">async</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>之後在主題路徑下找到 _config.yml 檔案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">themes\next\_config.yml</span><br></pre></td></tr></table></figure><p>開啟後在最下面加入以下程式碼</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">utterances:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure></li><li><p>恭喜你 ! 最後執行 <code>hexo clean</code> 、 <code>hexo g</code> 、<code>hexo d</code> 部屬完成，沒意外部落格就會有香香乾淨的留言板囉 !</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前跟著 Ray 的 &lt;a href=&quot;https://israynotarray.com/&quot;&gt;試著學 Hexo&lt;/a&gt; 系列架好了這個 Hexo 部落格&lt;/p&gt;
&lt;p&gt;原本是使用 NexT 內建就有支援的 &lt;a href=&quot;https://blog.disqus.com/&quot;&gt;DISQUS&lt;/a&gt; 這個留言板來使用，但它的版面有不實用又佔空間的奇怪互動表情符號 …&lt;/p&gt;
&lt;p&gt;剛好看到使用 Hexo 架站的大大們部落格中，那乾淨的 utterances ，就被被燒得不要不要的了，雖然&lt;a href=&quot;https://utteranc.es/&quot;&gt;官方的網址&lt;/a&gt;已經把流程寫得很清楚了，但相信金魚腦的我可能過一陣子就忘光光，寫成文章記錄過程。&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo 系列" scheme="https://22aliang.github.io/categories/Hexo-%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="Hexo Next" scheme="https://22aliang.github.io/tags/Hexo-Next/"/>
    
  </entry>
  
  <entry>
    <title>Note | Web 網頁入門初心者進大觀園</title>
    <link href="https://22aliang.github.io/2023/03/13/Note_Web%20%E7%B6%B2%E9%A0%81%E5%85%A5%E9%96%80%E5%88%9D%E5%BF%83%E8%80%85%E9%80%B2%E5%A4%A7%E8%A7%80%E5%9C%92/"/>
    <id>https://22aliang.github.io/2023/03/13/Note_Web%20%E7%B6%B2%E9%A0%81%E5%85%A5%E9%96%80%E5%88%9D%E5%BF%83%E8%80%85%E9%80%B2%E5%A4%A7%E8%A7%80%E5%9C%92/</id>
    <published>2023-03-13T04:58:17.062Z</published>
    <updated>2023-03-17T20:13:31.481Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  文章系列標題是借用「劉姥姥進大觀園」這句比喻人初次到某場所，對事事皆感到新奇，<del>或用來取笑別人沒見過世面</del> 的俗諺來作自嘲。</p><p>  順便背景介紹一下，我是設計科的非本科的轉職仔，自認資質愚鈍，很多東西除了看文件，還需要輔助很多額外的文章、實作踩雷才會有種比較理解的感覺。</p><p>  因此想透過用自己的文字撰寫來統整目前的知識，再用比較熟悉的圖像記憶整理一下，日後回憶也方便，這文章應該會一直編輯更新，直到有新的主題寫下去。</p><p>  若文章中有錯誤也歡迎糾正，感謝大家！</p>  <span id="more"></span><h2 id="Web-是怎麼運作的呢"><a href="#Web-是怎麼運作的呢" class="headerlink" title="Web 是怎麼運作的呢 ?"></a>Web 是怎麼運作的呢 ?</h2><p>  <img src="https://i.imgur.com/eavypn1.jpg" alt="Server-side website programming"></p><ul><li>網頁瀏覽器 → 使用超文本傳輸協定（HyperText Transfer Protocol, HTTP）網頁伺服器（web servers）→ 發送HTTP 請求（request）→ 網頁伺服器→ HTTP 回應（response）</li></ul><h3 id="靜態網頁-Static-sites"><a href="#靜態網頁-Static-sites" class="headerlink" title="靜態網頁 Static sites"></a>靜態網頁 Static sites</h3><p>  <img src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/basic_static_app_server.png" alt="Static sites | 圖源1"></p><h3 id="動態網頁-Dynamic-sites"><a href="#動態網頁-Dynamic-sites" class="headerlink" title="動態網頁 Dynamic sites"></a>動態網頁 Dynamic sites</h3><p>  <img src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/web_application_with_html_and_steps.png" alt="Dynamic sites | 圖源1 "></p><h3 id="用戶端-Client-side"><a href="#用戶端-Client-side" class="headerlink" title="用戶端 Client side"></a>用戶端 Client side</h3><ul><li>程式語言由HTML、CSS、JaveScript撰寫。</li><li>我們看到的網頁長怎樣</li></ul><h3 id="伺服器端-Sever-side"><a href="#伺服器端-Sever-side" class="headerlink" title="伺服器端 Sever-side"></a>伺服器端 Sever-side</h3><ul><li>常見程式語言PHP、Python、JAVA、C# 與 NodeJS(JavaScript)等…</li><li>遞送資訊，優化使用者體驗</li><li>購物車庫存管理、歷史紀錄、演算法、會員登入、手遊資料儲存碼、使用者資料分析…</li></ul><h2 id="什麼是HTTP"><a href="#什麼是HTTP" class="headerlink" title="什麼是HTTP ?"></a>什麼是HTTP ?</h2><ul><li>HTTPS( HyperText Transfer Protocol Secure超文本傳輸安全協定 )</li><li>利用SSL&#x2F;TLS來加密封包傳輸</li><li>預設port為443</li></ul><blockquote><p>推薦服用Will <a href="https://www.youtube.com/watch?v=Taq5TV1K4XU">保哥｜初學者都該學會的 HTTP 通訊協定基礎</a></p></blockquote><h3 id="HTTP請求方式-Http-Request-Method"><a href="#HTTP請求方式-Http-Request-Method" class="headerlink" title="HTTP請求方式 Http Request Method"></a>HTTP請求方式 Http Request Method</h3><ul><li><p>當你在網路點擊一個連結、提交一個表單、進行一次搜索等…瀏覽器都會發送一個HTTP給伺服器。</p></li><li><p><code>GET</code> 拿取資料 (應只用在顯示、讀取用途)</p></li><li><p><code>POST</code> 上傳資料，請求伺服器處理 ( 如提交表單、上傳檔案，可能建立、修改現有資源)</p></li><li><p><code>PUT</code> 覆蓋資料(全部)</p></li><li><p><code>PATCH</code> 更新資料(可部分更新)</p></li><li><p><code>DELETE</code> 刪除資料</p></li><li><p><code>OPTIONS</code> 使伺服器回傳該資源支援的所有HTTP請求方法</p></li></ul><h3 id="HTTP回應-HTTP-Response"><a href="#HTTP回應-HTTP-Response" class="headerlink" title="HTTP回應 HTTP Response"></a>HTTP回應 HTTP Response</h3><ul><li><code>1xx</code> ：信息 Informational 接收到request了 需要繼續處理100 Continue：Server 成功接收、但 Client 還要進行一些處理。</li><li><code>2xx</code>：成功 Successful : 200 0K：請求成功 、201 Created：資源已經被創建，POST、PUT 後可能會收到這樣的回應、204 No Content：成功但沒有回傳的內容（當你發出 Delete 的 request）</li><li><code>3xx</code>：重定向、轉址 (Redirects)301 Moved Permanently : 請求的網址已經搬家囉</li><li><code>4xx</code>：用戶端的錯誤 (Client Errors) 可能格式寫錯或漏寫400 Bad Request：請求格式寫錯、資源太大401 Unauthorized：未取得授權、檢視 API 的授權方式、登入等…、403 Forbidden：使用錯誤的驗證404：找不到資源，通常是路徑錯誤，大多是前端的路徑輸入錯誤、422：請求是正確的，可能不符合操作流程（大多可從後端的回應中找到問題）、429：請求次數過多，後端封鎖。</li><li><code>5xx</code>：伺服器端錯誤 (Server Errors) 伺服器當機、機台燒掉、500 Internal Server Error：伺服器出錯，搶票之類的</li></ul><p><img src="https://i.imgur.com/kZpUL4S.png" alt="chrome devtools"><br>使用google瀏覽器按F12，開啟開發者工具，可在Network中瀏覽，這個網頁下了什麼樣的Request，status欄為Response的狀態，可藉此找出優化網頁速度該從哪裡下手。</p><h2 id="Program-Process-Thread-三者關係"><a href="#Program-Process-Thread-三者關係" class="headerlink" title="Program, Process, Thread 三者關係"></a>Program, Process, Thread 三者關係</h2><p><img src="https://i.imgur.com/7tce7Bd.jpg" alt="Program, Process, Thread"></p><p>為加深理解，在圖片中加了劇本去理解這之間的關係</p><p><img src="https://i.imgur.com/fLJuBDZ.jpg" alt="Program, Process, Thread"></p><p>也可以打開工作管理員，不同頁籤中相互對照，幫助了解邏輯。</p><p><img src="https://i.imgur.com/WEr6feK.png" alt="工作管理員"></p><h2 id="參考-Reference"><a href="#參考-Reference" class="headerlink" title="參考 Reference"></a>參考 Reference</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Server-side/First_steps/Introduction">MDN</a><br>圖源 1 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/First_steps/Client-Server_overview">MDN | Client-Server Overview</a></p><h2 id="學習資料"><a href="#學習資料" class="headerlink" title="學習資料"></a>學習資料</h2><p><a href="https://www.youtube.com/watch?v=QuCu4iDpPTU&t=1871s">六角學院｜前後端都該理解的計算機概論</a><br><a href="https://www.youtube.com/watch?v=7_LPdttKXPc">Aaron｜How the Internet Works in 5 Minutes</a><br><a href="https://hulitw.medium.com/learning-tcp-ip-http-via-sending-letter-5d3299203660">Huli｜從傳紙條輕鬆學習基本網路概念</a></p><h2 id="讀書清單"><a href="#讀書清單" class="headerlink" title="讀書清單"></a>讀書清單</h2><p>恐龍書 Operation System Concepts<br><a href="https://www.rfc-editor.org/rfc/rfc2616">RFC 2616</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  文章系列標題是借用「劉姥姥進大觀園」這句比喻人初次到某場所，對事事皆感到新奇，&lt;del&gt;或用來取笑別人沒見過世面&lt;/del&gt; 的俗諺來作自嘲。&lt;/p&gt;
&lt;p&gt;  順便背景介紹一下，我是設計科的非本科的轉職仔，自認資質愚鈍，很多東西除了看文件，還需要輔助很多額外的文章、實作踩雷才會有種比較理解的感覺。&lt;/p&gt;
&lt;p&gt;  因此想透過用自己的文字撰寫來統整目前的知識，再用比較熟悉的圖像記憶整理一下，日後回憶也方便，這文章應該會一直編輯更新，直到有新的主題寫下去。&lt;/p&gt;
&lt;p&gt;  若文章中有錯誤也歡迎糾正，感謝大家！&lt;/p&gt;</summary>
    
    
    
    <category term="初心者筆記系列" scheme="https://22aliang.github.io/categories/%E5%88%9D%E5%BF%83%E8%80%85%E7%AD%86%E8%A8%98%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="HTTP Note" scheme="https://22aliang.github.io/tags/HTTP-Note/"/>
    
  </entry>
  
</feed>
